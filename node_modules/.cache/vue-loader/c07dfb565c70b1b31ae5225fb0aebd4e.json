{"remainingRequest":"/home/envisible/Documents/code/vue-material-kit-pro-v1.2.2/vue-material-kit-v1.2.2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/envisible/Documents/code/vue-material-kit-pro-v1.2.2/vue-material-kit-v1.2.2/src/views/dash/Wizard/FirstStep.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/envisible/Documents/code/vue-material-kit-pro-v1.2.2/vue-material-kit-v1.2.2/src/views/dash/Wizard/FirstStep.vue","mtime":1606770367231},{"path":"/home/envisible/Documents/code/vue-material-kit-pro-v1.2.2/vue-material-kit-v1.2.2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/envisible/Documents/code/vue-material-kit-pro-v1.2.2/vue-material-kit-v1.2.2/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/envisible/Documents/code/vue-material-kit-pro-v1.2.2/vue-material-kit-v1.2.2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/envisible/Documents/code/vue-material-kit-pro-v1.2.2/vue-material-kit-v1.2.2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IFNsaWRlWURvd25UcmFuc2l0aW9uIH0gZnJvbSAidnVlMi10cmFuc2l0aW9ucyI7CmltcG9ydCB7IGV4dGVuZCB9IGZyb20gInZlZS12YWxpZGF0ZSI7CmltcG9ydCB7IHJlcXVpcmVkLCBlbWFpbCB9IGZyb20gInZlZS12YWxpZGF0ZS9kaXN0L3J1bGVzIjsKCmV4dGVuZCgicmVxdWlyZWQiLCByZXF1aXJlZCk7CmV4dGVuZCgiZW1haWwiLCBlbWFpbCk7CgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgU2xpZGVZRG93blRyYW5zaXRpb24KICB9LAogIHByb3BzOiB7CiAgICBhdmF0YXI6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAiLi9pbWcvZGVmYXVsdC1hdmF0YXIucG5nIgogICAgfQogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGltYWdlOiAiIiwKICAgICAgZmlyc3ROYW1lOiAiIiwKICAgICAgbGFzdE5hbWU6ICIiLAogICAgICBlbWFpbDogIiIKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBoYW5kbGVQcmV2aWV3KGZpbGUpIHsKICAgICAgdGhpcy5tb2RlbC5pbWFnZVVybCA9IFVSTC5jcmVhdGVPYmplY3RVUkwoZmlsZS5yYXcpOwogICAgfSwKICAgIG9uRmlsZUNoYW5nZShlKSB7CiAgICAgIHZhciBmaWxlcyA9IGUudGFyZ2V0LmZpbGVzIHx8IGUuZGF0YVRyYW5zZmVyLmZpbGVzOwogICAgICBpZiAoIWZpbGVzLmxlbmd0aCkgcmV0dXJuOwogICAgICB0aGlzLmNyZWF0ZUltYWdlKGZpbGVzWzBdKTsKICAgIH0sCiAgICB2YWxpZGF0ZSgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHJlZnMuZm9ybS52YWxpZGF0ZSgpLnRoZW4ocmVzID0+IHsKICAgICAgICB0aGlzLiRlbWl0KCJvbi12YWxpZGF0ZWQiLCByZXMpOwogICAgICAgIHJldHVybiByZXM7CiAgICAgIH0pOwogICAgfSwKICAgIGNyZWF0ZUltYWdlKGZpbGUpIHsKICAgICAgdmFyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHZhciB2bSA9IHRoaXM7CgogICAgICByZWFkZXIub25sb2FkID0gZSA9PiB7CiAgICAgICAgdm0uaW1hZ2UgPSBlLnRhcmdldC5yZXN1bHQ7CiAgICAgIH07CiAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpOwogICAgfQogIH0KfTsK"},{"version":3,"sources":["FirstStep.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FirstStep.vue","sourceRoot":"src/views/dash/Wizard","sourcesContent":["<template>\n  <ValidationObserver ref=\"form\">\n    <form @submit.prevent=\"validate\">\n      <div>\n        <h5 class=\"info-text\">\n          Let's start with the basic information (with validation)\n        </h5>\n        <div class=\"md-layout\">\n          <div class=\"md-layout-item md-size-40 md-small-size-100\">\n            <div class=\"picture-container\">\n              <div class=\"picture\">\n                <div v-if=\"!image\">\n                  <img :src=\"avatar\" class=\"picture-src\" title=\"\" />\n                </div>\n                <div v-else>\n                  <img :src=\"image\" />\n                </div>\n                <input type=\"file\" @change=\"onFileChange\" />\n              </div>\n              <h6 class=\"description\">Choose Picture</h6>\n            </div>\n          </div>\n          <div class=\"md-layout-item md-size-60 mt-4 md-small-size-100\">\n            <ValidationProvider\n              name=\"firstName\"\n              rules=\"required\"\n              v-slot=\"{ passed, failed }\"\n            >\n              <md-field\n                :class=\"[\n                  { 'md-error': failed },\n                  { 'md-valid': passed },\n                  { 'md-form-group': true }\n                ]\"\n              >\n                <md-icon>face</md-icon>\n                <label>First Name</label>\n                <md-input v-model=\"firstName\" type=\"text\"> </md-input>\n\n                <slide-y-down-transition>\n                  <md-icon class=\"error\" v-show=\"failed\">close</md-icon>\n                </slide-y-down-transition>\n                <slide-y-down-transition>\n                  <md-icon class=\"success\" v-show=\"passed\">done</md-icon>\n                </slide-y-down-transition>\n              </md-field>\n            </ValidationProvider>\n\n            <ValidationProvider\n              name=\"lastName\"\n              rules=\"required\"\n              v-slot=\"{ passed, failed }\"\n            >\n              <md-field\n                :class=\"[\n                  { 'md-error': failed },\n                  { 'md-valid': passed },\n                  { 'md-form-group': true }\n                ]\"\n              >\n                <md-icon>record_voice_over</md-icon>\n                <label>Last Name</label>\n                <md-input v-model=\"lastName\" type=\"text\"> </md-input>\n\n                <slide-y-down-transition>\n                  <md-icon class=\"error\" v-show=\"failed\">close</md-icon>\n                </slide-y-down-transition>\n                <slide-y-down-transition>\n                  <md-icon class=\"success\" v-show=\"passed\">done</md-icon>\n                </slide-y-down-transition>\n              </md-field>\n            </ValidationProvider>\n          </div>\n          <div class=\"md-layout-item md-size-95 ml-auto mt-4 md-small-size-100\">\n            <ValidationProvider\n              name=\"email\"\n              rules=\"required|email\"\n              v-slot=\"{ passed, failed }\"\n            >\n              <md-field\n                :class=\"[\n                  { 'md-error': failed },\n                  { 'md-valid': passed },\n                  { 'md-form-group': true }\n                ]\"\n              >\n                <md-icon>email</md-icon>\n                <label>Email</label>\n                <md-input v-model=\"email\" type=\"text\"> </md-input>\n\n                <slide-y-down-transition>\n                  <md-icon class=\"error\" v-show=\"failed\">close</md-icon>\n                </slide-y-down-transition>\n                <slide-y-down-transition>\n                  <md-icon class=\"success\" v-show=\"passed\">done</md-icon>\n                </slide-y-down-transition>\n              </md-field>\n            </ValidationProvider>\n          </div>\n        </div>\n      </div>\n    </form>\n  </ValidationObserver>\n</template>\n<script>\nimport { SlideYDownTransition } from \"vue2-transitions\";\nimport { extend } from \"vee-validate\";\nimport { required, email } from \"vee-validate/dist/rules\";\n\nextend(\"required\", required);\nextend(\"email\", email);\n\nexport default {\n  components: {\n    SlideYDownTransition\n  },\n  props: {\n    avatar: {\n      type: String,\n      default: \"./img/default-avatar.png\"\n    }\n  },\n  data() {\n    return {\n      image: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\"\n    };\n  },\n  methods: {\n    handlePreview(file) {\n      this.model.imageUrl = URL.createObjectURL(file.raw);\n    },\n    onFileChange(e) {\n      var files = e.target.files || e.dataTransfer.files;\n      if (!files.length) return;\n      this.createImage(files[0]);\n    },\n    validate() {\n      return this.$refs.form.validate().then(res => {\n        this.$emit(\"on-validated\", res);\n        return res;\n      });\n    },\n    createImage(file) {\n      var reader = new FileReader();\n      var vm = this;\n\n      reader.onload = e => {\n        vm.image = e.target.result;\n      };\n      reader.readAsDataURL(file);\n    }\n  }\n};\n</script>\n<style></style>\n"]}]}