{"remainingRequest":"/home/envisible/Documents/code/vue-material-kit-pro-v1.2.2/vue-material-kit-v1.2.2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/envisible/Documents/code/vue-material-kit-pro-v1.2.2/vue-material-kit-v1.2.2/src/views/sections/Testimonials.vue?vue&type=template&id=6f08e9eb&","dependencies":[{"path":"/home/envisible/Documents/code/vue-material-kit-pro-v1.2.2/vue-material-kit-v1.2.2/src/views/sections/Testimonials.vue","mtime":1576662228000},{"path":"/home/envisible/Documents/code/vue-material-kit-pro-v1.2.2/vue-material-kit-v1.2.2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/envisible/Documents/code/vue-material-kit-pro-v1.2.2/vue-material-kit-v1.2.2/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/envisible/Documents/code/vue-material-kit-pro-v1.2.2/vue-material-kit-v1.2.2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/envisible/Documents/code/vue-material-kit-pro-v1.2.2/vue-material-kit-v1.2.2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXYgY2xhc3M9IndyYXBwZXIiPgogIDwhLS0gVGVzdGltb25pYWxzIDEgLS0+CiAgPGRpdgogICAgY2xhc3M9InNlY3Rpb24gc2VjdGlvbi10ZXN0aW1vbmlhbHMtMSBzZWN0aW9uLWltYWdlIgogICAgOnN0eWxlPSJzZWN0aW9uVGVzdGltb25pYWxzKHRlc3RpbW9uaWFsczEpIgogID4KICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CiAgICAgIDxkaXYgY2xhc3M9Im1kLWxheW91dCI+CiAgICAgICAgPGRpdgogICAgICAgICAgY2xhc3M9Im1kLWxheW91dC1pdGVtIG1kLXNpemUtNTAgbWQtc21hbGwtc2l6ZS0xMDAgbXgtYXV0byB0ZXh0LWNlbnRlciIKICAgICAgICA+CiAgICAgICAgICA8aDIgY2xhc3M9InRpdGxlIj4KICAgICAgICAgICAgT3VyIENsaWVudHMgTG92ZSBVcwogICAgICAgICAgPC9oMj4KICAgICAgICAgIDxoNSBjbGFzcz0iZGVzY3JpcHRpb24iPgogICAgICAgICAgICBZb3UgbmVlZCBtb3JlIGluZm9ybWF0aW9uPyBDaGVjayB3aGF0IG90aGVyIHBlcnNvbnMgYXJlIHNheWluZwogICAgICAgICAgICBhYm91dCBvdXIgcHJvZHVjdC4gVGhleSBhcmUgdmVyeSBoYXBweSB3aXRoIHRoZWlyIHB1cmNoYXNlLgogICAgICAgICAgPC9oNT4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9Im1kLWxheW91dCI+CiAgICAgICAgPGRpdiBjbGFzcz0ibWQtbGF5b3V0LWl0ZW0gbWQtc2l6ZS0zMyBtZC1zbWFsbC1zaXplLTEwMCI+CiAgICAgICAgICA8dGVzdGltb25pYWwtY2FyZD4KICAgICAgICAgICAgPG1kLWljb24gc2xvdD0iaWNvbiI+CiAgICAgICAgICAgICAgZm9ybWF0X3F1b3RlCiAgICAgICAgICAgIDwvbWQtaWNvbj4KICAgICAgICAgICAgPHRlbXBsYXRlIHNsb3Q9ImNhcmRDb250ZW50Ij4KICAgICAgICAgICAgICA8aDUgY2xhc3M9ImNhcmQtZGVzY3JpcHRpb24iPgogICAgICAgICAgICAgICAgIllvdXIgcHJvZHVjdHMsIGFsbCB0aGUga2l0cyB0aGF0IEkgaGF2ZSBkb3dubG9hZGVkIGZyb20geW91cgogICAgICAgICAgICAgICAgc2l0ZSBhbmQgd29ya2VkIHdpdGggYXJlIHNvb28gY29vbCEgSSBsb3ZlIHRoZSBjb2xvciBtaXh0dXJlcywKICAgICAgICAgICAgICAgIGNhcmRzLi4uIGV2ZXJ5dGhpbmcuIEtlZXAgdXAgdGhlIGdyZWF0IHdvcmshIgogICAgICAgICAgICAgIDwvaDU+CiAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICAgIDx0ZW1wbGF0ZSBzbG90PSJjYXJkQWN0aW9uIj4KICAgICAgICAgICAgICA8aDQgY2xhc3M9ImNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgQWxlYyBUaG9tcHNvbgogICAgICAgICAgICAgIDwvaDQ+CiAgICAgICAgICAgICAgPGg2IGNsYXNzPSJjYXJkLWNhdGVnb3J5Ij4KICAgICAgICAgICAgICAgIEBhbGVjdGhvbXBzb24KICAgICAgICAgICAgICA8L2g2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1kLWNhcmQtYXZhdGFyIj4KICAgICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSI+CiAgICAgICAgICAgICAgICAgIDxpbWcKICAgICAgICAgICAgICAgICAgICBjbGFzcz0iaW1nIgogICAgICAgICAgICAgICAgICAgIDpzcmM9InNlY3Rpb25UZXN0aW1vbmlhbHMxLnRlc3RpbW9uaWFsczEiCiAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgIDwvdGVzdGltb25pYWwtY2FyZD4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJtZC1sYXlvdXQtaXRlbSBtZC1zaXplLTMzIG1kLXNtYWxsLXNpemUtMTAwIj4KICAgICAgICAgIDx0ZXN0aW1vbmlhbC1jYXJkPgogICAgICAgICAgICA8bWQtaWNvbiBzbG90PSJpY29uIj4KICAgICAgICAgICAgICBmb3JtYXRfcXVvdGUKICAgICAgICAgICAgPC9tZC1pY29uPgogICAgICAgICAgICA8dGVtcGxhdGUgc2xvdD0iY2FyZENvbnRlbnQiPgogICAgICAgICAgICAgIDxoNSBjbGFzcz0iY2FyZC1kZXNjcmlwdGlvbiI+CiAgICAgICAgICAgICAgICAiRG9uJ3QgYmUgc2NhcmVkIG9mIHRoZSB0cnV0aCBiZWNhdXNlIHdlIG5lZWQgdG8gcmVzdGFydCB0aGUKICAgICAgICAgICAgICAgIGh1bWFuIGZvdW5kYXRpb24gaW4gdHJ1dGguIFRoYXQncyB3aHkgSSBsb3ZlIHlvdSBsaWtlIEthbnllCiAgICAgICAgICAgICAgICBsb3ZlcyBLYW55ZSBJIGxvdmUgUmljayBPd2Vuc+KAmSBiZWQgZGVzaWduIGJ1dCB0aGUgYmFjayBpcyBub3QKICAgICAgICAgICAgICAgIHNvIGF0dHJhY3RpdmUiCiAgICAgICAgICAgICAgPC9oNT4KICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgICAgPHRlbXBsYXRlIHNsb3Q9ImNhcmRBY3Rpb24iPgogICAgICAgICAgICAgIDxoNCBjbGFzcz0iY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICBHaW5hIEFuZHJldwogICAgICAgICAgICAgIDwvaDQ+CiAgICAgICAgICAgICAgPGg2IGNsYXNzPSJjYXJkLWNhdGVnb3J5Ij4KICAgICAgICAgICAgICAgIEBnaW5hYW5kcmV3CiAgICAgICAgICAgICAgPC9oNj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZC1jYXJkLWF2YXRhciI+CiAgICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiPgogICAgICAgICAgICAgICAgICA8aW1nCiAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImltZyIKICAgICAgICAgICAgICAgICAgICA6c3JjPSJzZWN0aW9uVGVzdGltb25pYWxzMS50ZXN0aW1vbmlhbHMyIgogICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICA8L3Rlc3RpbW9uaWFsLWNhcmQ+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0ibWQtbGF5b3V0LWl0ZW0gbWQtc2l6ZS0zMyBtZC1zbWFsbC1zaXplLTEwMCI+CiAgICAgICAgICA8dGVzdGltb25pYWwtY2FyZD4KICAgICAgICAgICAgPG1kLWljb24gc2xvdD0iaWNvbiI+CiAgICAgICAgICAgICAgZm9ybWF0X3F1b3RlCiAgICAgICAgICAgIDwvbWQtaWNvbj4KICAgICAgICAgICAgPHRlbXBsYXRlIHNsb3Q9ImNhcmRDb250ZW50Ij4KICAgICAgICAgICAgICA8aDUgY2xhc3M9ImNhcmQtZGVzY3JpcHRpb24iPgogICAgICAgICAgICAgICAgWW91ciBwcm9kdWN0cywgYWxsIHRoZSBraXRzIHRoYXQgSSBoYXZlIGRvd25sb2FkZWQgZnJvbSB5b3VyCiAgICAgICAgICAgICAgICBzaXRlIGFuZCB3b3JrZWQgd2l0aCBhcmUgc29vbyBjb29sISBJIGxvdmUgdGhlIGNvbG9yIG1peHR1cmVzLAogICAgICAgICAgICAgICAgY2FyZHMuLi4gZXZlcnl0aGluZy4gS2VlcCB1cCB0aGUgZ3JlYXQgd29yayEKICAgICAgICAgICAgICA8L2g1PgogICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICA8dGVtcGxhdGUgc2xvdD0iY2FyZEFjdGlvbiI+CiAgICAgICAgICAgICAgPGg0IGNsYXNzPSJjYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgIEdlb3JnZSBXZXN0CiAgICAgICAgICAgICAgPC9oND4KICAgICAgICAgICAgICA8aDYgY2xhc3M9ImNhcmQtY2F0ZWdvcnkiPgogICAgICAgICAgICAgICAgQGdlb3JnZXdlc3QKICAgICAgICAgICAgICA8L2g2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1kLWNhcmQtYXZhdGFyIj4KICAgICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSI+CiAgICAgICAgICAgICAgICAgIDxpbWcKICAgICAgICAgICAgICAgICAgICBjbGFzcz0iaW1nIgogICAgICAgICAgICAgICAgICAgIDpzcmM9InNlY3Rpb25UZXN0aW1vbmlhbHMxLnRlc3RpbW9uaWFsczMiCiAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgIDwvdGVzdGltb25pYWwtY2FyZD4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICA8L2Rpdj4KICA8IS0tIGVuZCBUZXN0aW1vbmlhbHMgMSAtLT4KCiAgPCEtLSBUZXN0aW1vbmlhbHMgMiAtLT4KICA8ZGl2IGNsYXNzPSJzZWN0aW9uIHNlY3Rpb24tdGVzdGltb25pYWxzLTIgc2VjdGlvbi1kYXJrIj4KICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CiAgICAgIDxkaXYgY2xhc3M9Im1kLWxheW91dCI+CiAgICAgICAgPGRpdiBjbGFzcz0ibWQtbGF5b3V0LWl0ZW0gbWQtc2l6ZS0xMDAiPgogICAgICAgICAgPGVsLWNhcm91c2VsCiAgICAgICAgICAgIGluZGljYXRvci1wb3NpdGlvbj0ibm9uZSIKICAgICAgICAgICAgdHJpZ2dlcj0iY2xpY2siCiAgICAgICAgICAgIDppbnRlcnZhbD0iNTAwMCIKICAgICAgICAgID4KICAgICAgICAgICAgPGVsLWNhcm91c2VsLWl0ZW0+CiAgICAgICAgICAgICAgPHRlc3RpbW9uaWFsLWNhcmQgY2FyZC1wbGFpbj4KICAgICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgICAgc2xvdD0iY2FyZEF2YXRhclRvcCIKICAgICAgICAgICAgICAgICAgY2xhc3M9Im1kLWNhcmQtYXZhdGFyIG10LTAiCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSI+CiAgICAgICAgICAgICAgICAgICAgPGltZwogICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImltZyIKICAgICAgICAgICAgICAgICAgICAgIDpzcmM9InNlY3Rpb25UZXN0aW1vbmlhbHMyLnRlc3RpbW9uaWFsczEiCiAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZSBzbG90PSJjYXJkQ29udGVudCI+CiAgICAgICAgICAgICAgICAgIDxoNSBjbGFzcz0iY2FyZC1kZXNjcmlwdGlvbiI+CiAgICAgICAgICAgICAgICAgICAgIkkgc3BlYWsgeWVsbCBzY3JlYW0gZGlyZWN0bHkgYXQgdGhlIG9sZCBndWFyZCBvbiBiZWhhbGYKICAgICAgICAgICAgICAgICAgICBvZiB0aGUgZnV0dXJlLiBJIGdvdHRhIHNheSBhdCB0aGF0IHRpbWUgSeKAmWQgbGlrZSB0byBtZWV0CiAgICAgICAgICAgICAgICAgICAgS2FueWUgSSBzcGVhayB5ZWxsIHNjcmVhbSBkaXJlY3RseSBhdCB0aGUgb2xkIGd1YXJkIG9uCiAgICAgICAgICAgICAgICAgICAgYmVoYWxmIG9mIHRoZSBmdXR1cmUuIE15IGJyb3RoZXIgQ2hhbmNlISEhIDxicj5UaGFuayB5b3UKICAgICAgICAgICAgICAgICAgICBmb3IgbGV0dGluZyBtZSB3b3JrIG9uIHRoaXMgbWFzdGVycGllY2UuIE9uZSBvZiBteQogICAgICAgICAgICAgICAgICAgIGZhdm9yaXRlIHBlb3BsZS4iCiAgICAgICAgICAgICAgICAgIDwvaDU+CiAgICAgICAgICAgICAgICAgIDxoNCBjbGFzcz0iY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgS2VuZGFsbCBUaG9tcHNvbgogICAgICAgICAgICAgICAgICA8L2g0PgogICAgICAgICAgICAgICAgICA8aDYgY2xhc3M9ImNhcmQtY2F0ZWdvcnkgdGV4dC1tdXRlZCI+CiAgICAgICAgICAgICAgICAgICAgQ0VPIEAgTWFya2V0aW5nIERpZ2l0YWwgTHRkLgogICAgICAgICAgICAgICAgICA8L2g2PgogICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZSBzbG90PSJjYXJkQWN0aW9uIj4KICAgICAgICAgICAgICAgICAgPG1kLWljb24gY2xhc3M9InRleHQtd2FybmluZyI+CiAgICAgICAgICAgICAgICAgICAgc3RhcgogICAgICAgICAgICAgICAgICA8L21kLWljb24+CiAgICAgICAgICAgICAgICAgIDxtZC1pY29uIGNsYXNzPSJ0ZXh0LXdhcm5pbmciPgogICAgICAgICAgICAgICAgICAgIHN0YXIKICAgICAgICAgICAgICAgICAgPC9tZC1pY29uPgogICAgICAgICAgICAgICAgICA8bWQtaWNvbiBjbGFzcz0idGV4dC13YXJuaW5nIj4KICAgICAgICAgICAgICAgICAgICBzdGFyCiAgICAgICAgICAgICAgICAgIDwvbWQtaWNvbj4KICAgICAgICAgICAgICAgICAgPG1kLWljb24gY2xhc3M9InRleHQtd2FybmluZyI+CiAgICAgICAgICAgICAgICAgICAgc3RhcgogICAgICAgICAgICAgICAgICA8L21kLWljb24+CiAgICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICAgIDwvdGVzdGltb25pYWwtY2FyZD4KICAgICAgICAgICAgPC9lbC1jYXJvdXNlbC1pdGVtPgogICAgICAgICAgICA8ZWwtY2Fyb3VzZWwtaXRlbT4KICAgICAgICAgICAgICA8dGVzdGltb25pYWwtY2FyZCBjYXJkLXBsYWluPgogICAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgICBzbG90PSJjYXJkQXZhdGFyVG9wIgogICAgICAgICAgICAgICAgICBjbGFzcz0ibWQtY2FyZC1hdmF0YXIgbXQtMCIKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIj4KICAgICAgICAgICAgICAgICAgICA8aW1nCiAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iaW1nIgogICAgICAgICAgICAgICAgICAgICAgOnNyYz0ic2VjdGlvblRlc3RpbW9uaWFsczIudGVzdGltb25pYWxzMiIKICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPHRlbXBsYXRlIHNsb3Q9ImNhcmRDb250ZW50Ij4KICAgICAgICAgICAgICAgICAgPGg1IGNsYXNzPSJjYXJkLWRlc2NyaXB0aW9uIj4KICAgICAgICAgICAgICAgICAgICAiVGhhbmsgeW91IEFubmEgZm9yIHRoZSBpbnZpdGUgdGhhbmsgeW91IHRvIHRoZSB3aG9sZQogICAgICAgICAgICAgICAgICAgIFZvZ3VlIHRlYW0gQ2FsbGVkIEkgTWlzcyB0aGUgT2xkIEthbnllIEF0IHRoZSBHb2QncyBsYXN0CiAgICAgICAgICAgICAgICAgICAgZ2FtZSBDaG9wIHVwIHRoZSBzb3VsIEthbnllLiBJIHByb21pc2UgSSB3aWxsIG5ldmVyIGxldAogICAgICAgICAgICAgICAgICAgIHRoZSBwZW9wbGUgZG93bi4gSSB3YW50IGEgYmV0dGVyIGxpZmUgZm9yIGFsbCEhISBQYWJsbwogICAgICAgICAgICAgICAgICAgIFBhYmxvIFBhYmxvIFBhYmxvISBUaGFuayB5b3UgQW5uYSBmb3IgdGhlIGludml0ZSB0aGFuayB5b3UKICAgICAgICAgICAgICAgICAgICB0byB0aGUgd2hvbGUgVm9ndWUgdGVhbS4iCiAgICAgICAgICAgICAgICAgIDwvaDU+CiAgICAgICAgICAgICAgICAgIDxoNCBjbGFzcz0iY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgQ2hyaXN0aWFuIExvdWJvdXRpbgogICAgICAgICAgICAgICAgICA8L2g0PgogICAgICAgICAgICAgICAgICA8aDYgY2xhc3M9ImNhcmQtY2F0ZWdvcnkgdGV4dC1tdXRlZCI+CiAgICAgICAgICAgICAgICAgICAgRGVzaWduZXIgQCBMb3Vib3V0aW4gJmFtcDsgQ28uCiAgICAgICAgICAgICAgICAgIDwvaDY+CiAgICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICAgICAgPHRlbXBsYXRlIHNsb3Q9ImNhcmRBY3Rpb24iPgogICAgICAgICAgICAgICAgICA8bWQtaWNvbiBjbGFzcz0idGV4dC13YXJuaW5nIj4KICAgICAgICAgICAgICAgICAgICBzdGFyCiAgICAgICAgICAgICAgICAgIDwvbWQtaWNvbj4KICAgICAgICAgICAgICAgICAgPG1kLWljb24gY2xhc3M9InRleHQtd2FybmluZyI+CiAgICAgICAgICAgICAgICAgICAgc3RhcgogICAgICAgICAgICAgICAgICA8L21kLWljb24+CiAgICAgICAgICAgICAgICAgIDxtZC1pY29uIGNsYXNzPSJ0ZXh0LXdhcm5pbmciPgogICAgICAgICAgICAgICAgICAgIHN0YXIKICAgICAgICAgICAgICAgICAgPC9tZC1pY29uPgogICAgICAgICAgICAgICAgICA8bWQtaWNvbiBjbGFzcz0idGV4dC13YXJuaW5nIj4KICAgICAgICAgICAgICAgICAgICBzdGFyCiAgICAgICAgICAgICAgICAgIDwvbWQtaWNvbj4KICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICAgICAgPC90ZXN0aW1vbmlhbC1jYXJkPgogICAgICAgICAgICA8L2VsLWNhcm91c2VsLWl0ZW0+CiAgICAgICAgICA8L2VsLWNhcm91c2VsPgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDwvZGl2PgogIDwhLS0gZW5kIFRlc3RpbW9uaWFscyAyIC0tPgoKICA8IS0tIFRlc3RpbW9uaWFscyAzIC0tPgogIDxkaXYgY2xhc3M9InNlY3Rpb24gc2VjdGlvbi10ZXN0aW1vbmlhbHMtMyI+CiAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPgogICAgICA8ZGl2IGNsYXNzPSJtZC1sYXlvdXQiPgogICAgICAgIDxkaXYKICAgICAgICAgIGNsYXNzPSJtZC1sYXlvdXQtaXRlbSBtZC1zaXplLTUwIG1kLXNtYWxsLXNpemUtMTAwIG14LWF1dG8gdGV4dC1jZW50ZXIiCiAgICAgICAgPgogICAgICAgICAgPGgyIGNsYXNzPSJ0aXRsZSI+CiAgICAgICAgICAgIFdoYXQgQ2xpZW50cyBTYXkKICAgICAgICAgIDwvaDI+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJtZC1sYXlvdXQiPgogICAgICAgIDxkaXYgY2xhc3M9Im1kLWxheW91dC1pdGVtIG1kLXNpemUtMzMgbWQtc21hbGwtc2l6ZS0xMDAiPgogICAgICAgICAgPHRlc3RpbW9uaWFsLWNhcmQgY2FyZC1wbGFpbj4KICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgIHNsb3Q9ImNhcmRBdmF0YXJUb3AiCiAgICAgICAgICAgICAgY2xhc3M9Im1kLWNhcmQtYXZhdGFyIG10LTAiCiAgICAgICAgICAgID4KICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiPgogICAgICAgICAgICAgICAgPGltZwogICAgICAgICAgICAgICAgICBjbGFzcz0iaW1nIgogICAgICAgICAgICAgICAgICA6c3JjPSJzZWN0aW9uVGVzdGltb25pYWxzMS50ZXN0aW1vbmlhbHMxIgogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDx0ZW1wbGF0ZSBzbG90PSJjYXJkQ29udGVudCI+CiAgICAgICAgICAgICAgPGg0IGNsYXNzPSJjYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgIE1pa2UgQW5kcmV3CiAgICAgICAgICAgICAgPC9oND4KICAgICAgICAgICAgICA8aDYgY2xhc3M9ImNhcmQtY2F0ZWdvcnkgdGV4dC1tdXRlZCI+CiAgICAgICAgICAgICAgICBDRU8gQCBNYXJrZXRpbmcgRGlnaXRhbCBMdGQuCiAgICAgICAgICAgICAgPC9oNj4KICAgICAgICAgICAgICA8aDUgY2xhc3M9ImNhcmQtZGVzY3JpcHRpb24iPgogICAgICAgICAgICAgICAgIkkgc3BlYWsgeWVsbCBzY3JlYW0gZGlyZWN0bHkgYXQgdGhlIG9sZCBndWFyZCBvbiBiZWhhbGYgb2YKICAgICAgICAgICAgICAgIHRoZSBmdXR1cmUuIEkgZ290dGEgc2F5IGF0IHRoYXQgdGltZSBJ4oCZZCBsaWtlIHRvIG1lZXQgS2FueWUgSQogICAgICAgICAgICAgICAgc3BlYWsgeWVsbCBzY3JlYW0gZGlyZWN0bHkgYXQgdGhlIG9sZCBndWFyZCBvbiBiZWhhbGYgb2YgdGhlCiAgICAgICAgICAgICAgICBmdXR1cmUuIgogICAgICAgICAgICAgIDwvaDU+CiAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICA8L3Rlc3RpbW9uaWFsLWNhcmQ+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0ibWQtbGF5b3V0LWl0ZW0gbWQtc2l6ZS0zMyBtZC1zbWFsbC1zaXplLTEwMCI+CiAgICAgICAgICA8dGVzdGltb25pYWwtY2FyZCBjYXJkLXBsYWluPgogICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgc2xvdD0iY2FyZEF2YXRhclRvcCIKICAgICAgICAgICAgICBjbGFzcz0ibWQtY2FyZC1hdmF0YXIgbXQtMCIKICAgICAgICAgICAgPgogICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSI+CiAgICAgICAgICAgICAgICA8aW1nCiAgICAgICAgICAgICAgICAgIGNsYXNzPSJpbWciCiAgICAgICAgICAgICAgICAgIDpzcmM9InNlY3Rpb25UZXN0aW1vbmlhbHMxLnRlc3RpbW9uaWFsczIiCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPHRlbXBsYXRlIHNsb3Q9ImNhcmRDb250ZW50Ij4KICAgICAgICAgICAgICA8aDQgY2xhc3M9ImNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgVGluYSBUaG9tcHNvbgogICAgICAgICAgICAgIDwvaDQ+CiAgICAgICAgICAgICAgPGg2IGNsYXNzPSJjYXJkLWNhdGVnb3J5IHRleHQtbXV0ZWQiPgogICAgICAgICAgICAgICAgTWFya2V0aW5nIEAgQXBwbGUgSW5jLgogICAgICAgICAgICAgIDwvaDY+CiAgICAgICAgICAgICAgPGg1IGNsYXNzPSJjYXJkLWRlc2NyaXB0aW9uIj4KICAgICAgICAgICAgICAgICJJIHByb21pc2UgSSB3aWxsIG5ldmVyIGxldCB0aGUgcGVvcGxlIGRvd24uIEkgd2FudCBhIGJldHRlcgogICAgICAgICAgICAgICAgbGlmZSBmb3IgYWxsISEhIFBhYmxvIFBhYmxvIFBhYmxvIFBhYmxvISBUaGFuayB5b3UgQW5uYSBmb3IKICAgICAgICAgICAgICAgIHRoZSBpbnZpdGUgdGhhbmsgeW91IHRvIHRoZSB3aG9sZSBWb2d1ZSB0ZWFtIEl0IHdhc27igJl0IGFueQogICAgICAgICAgICAgICAgS2FueWVzIEkgbG92ZSBSaWNrIE93ZW5z4oCZIGJlZCBkZXNpZ24gYnV0IHRoZSBiYWNrIGlzIHRvbyBoaWdoCiAgICAgICAgICAgICAgICBmb3IgdGhlIGJlYW1zIGFuZCBhbmdsZSBvZiB0aGUgY2VpbGluZyIKICAgICAgICAgICAgICA8L2g1PgogICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgPC90ZXN0aW1vbmlhbC1jYXJkPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9Im1kLWxheW91dC1pdGVtIG1kLXNpemUtMzMgbWQtc21hbGwtc2l6ZS0xMDAiPgogICAgICAgICAgPHRlc3RpbW9uaWFsLWNhcmQgY2FyZC1wbGFpbj4KICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgIHNsb3Q9ImNhcmRBdmF0YXJUb3AiCiAgICAgICAgICAgICAgY2xhc3M9Im1kLWNhcmQtYXZhdGFyIG10LTAiCiAgICAgICAgICAgID4KICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiPgogICAgICAgICAgICAgICAgPGltZwogICAgICAgICAgICAgICAgICBjbGFzcz0iaW1nIgogICAgICAgICAgICAgICAgICA6c3JjPSJzZWN0aW9uVGVzdGltb25pYWxzMy50ZXN0aW1vbmlhbHMxIgogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDx0ZW1wbGF0ZSBzbG90PSJjYXJkQ29udGVudCI+CiAgICAgICAgICAgICAgPGg0IGNsYXNzPSJjYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgIEdpbmEgV2VzdAogICAgICAgICAgICAgIDwvaDQ+CiAgICAgICAgICAgICAgPGg2IGNsYXNzPSJjYXJkLWNhdGVnb3J5IHRleHQtbXV0ZWQiPgogICAgICAgICAgICAgICAgQ0ZPIEAgQXBwbGUgSW5jLgogICAgICAgICAgICAgIDwvaDY+CiAgICAgICAgICAgICAgPGg1IGNsYXNzPSJjYXJkLWRlc2NyaXB0aW9uIj4KICAgICAgICAgICAgICAgICJJJ3ZlIGJlZW4gdHJ5aW5nIHRvIGZpZ3VyZSBvdXQgdGhlIGJlZCBkZXNpZ24gZm9yIHRoZSBtYXN0ZXIKICAgICAgICAgICAgICAgIGJlZHJvb20gYXQgb3VyIEhpZGRlbiBIaWxscyBjb21wb3VuZC4uLiBSb3nDqHJlIGRvZXNuJ3QgbWFrZSBhCiAgICAgICAgICAgICAgICBQb2xhciBiZWFyIGJlZCBidXQgdGhlIFBvbGFyIGJlYXIuIFRoaXMgaXMgYSB2ZXJ5IG5pY2UKICAgICAgICAgICAgICAgIHRlc3RpbW9uaWFsIGFib3V0IHRoaXMgY29tcGFueS4iCiAgICAgICAgICAgICAgPC9oNT4KICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgIDwvdGVzdGltb25pYWwtY2FyZD4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICA8L2Rpdj4KICA8IS0tIGVuZCBUZXN0aW1vbmlhbHMgMyAtLT4KPC9kaXY+Cg=="},null]}