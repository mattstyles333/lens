{"remainingRequest":"/home/envisible/Documents/code/vue-material-kit-pro-v1.2.2/vue-material-kit-v1.2.2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/envisible/Documents/code/vue-material-kit-pro-v1.2.2/vue-material-kit-v1.2.2/src/views/examples/Product.vue?vue&type=template&id=5d4956ba&","dependencies":[{"path":"/home/envisible/Documents/code/vue-material-kit-pro-v1.2.2/vue-material-kit-v1.2.2/src/views/examples/Product.vue","mtime":1606763606710},{"path":"/home/envisible/Documents/code/vue-material-kit-pro-v1.2.2/vue-material-kit-v1.2.2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/envisible/Documents/code/vue-material-kit-pro-v1.2.2/vue-material-kit-v1.2.2/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/envisible/Documents/code/vue-material-kit-pro-v1.2.2/vue-material-kit-v1.2.2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/envisible/Documents/code/vue-material-kit-pro-v1.2.2/vue-material-kit-v1.2.2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXYgY2xhc3M9IndyYXBwZXIiPgogIDxwYXJhbGxheAogICAgY2xhc3M9InBhZ2UtaGVhZGVyIGhlYWRlci1maWx0ZXIgaGVhZGVyLXNtYWxsIgogICAgcGFyYWxsYXgtYWN0aXZlPSJ0cnVlIgogICAgZmlsdGVyLWNvbG9yPSJncmV5IgogICAgOnN0eWxlPSJoZWFkZXJTdHlsZSIKICA+CiAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPgogICAgICA8ZGl2IGNsYXNzPSJtZC1sYXlvdXQgdGl0bGUtcm93Ij4KICAgICAgICA8ZGl2CiAgICAgICAgICBjbGFzcz0ibWQtbGF5b3V0LWl0ZW0gbWQtc2l6ZS0zMyBtZC1zbWFsbC1zaXplLTEwMCBtbC1hdXRvIHRleHQtcmlnaHQiCiAgICAgICAgPgogICAgICAgICAgCiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPC9wYXJhbGxheD4KICA8ZGl2IGNsYXNzPSJzZWN0aW9uIj4KICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CiAgICAgIDxkaXYgY2xhc3M9Im1haW4gbWFpbi1yYWlzZWQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bWQtcHJvZ3Jlc3MtYmFyCiAgICAgICAgICBjbGFzcz0ibWQtcHJpbWFyeSIKICAgICAgICAgIDptZC12YWx1ZT0iYW1vdW50IgogICAgICAgIC8+CiAgICAgICAgPGRpdiBjbGFzcz0ibWQtbGF5b3V0Ij4KCiAgICAgICAgICA8ZGl2IGNsYXNzPSJtZC1sYXlvdXQtaXRlbSBtZC1zaXplLTUwIG1kLXNtYWxsLXNpemUtMTAwIj4KICAgICAgICAgICAgPFByb2R1Y3Rab29tZXIKICAgICAgICAgICAgICA6YmFzZS1pbWFnZXM9ImltYWdlcyIKICAgICAgICAgICAgICA6YmFzZS16b29tZXItb3B0aW9ucz0iem9vbWVyT3B0aW9ucyIKICAgICAgICAgICAgLz4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdiBjbGFzcz0ibWQtbGF5b3V0LWl0ZW0gbWQtc2l6ZS01MCBtZC1zbWFsbC1zaXplLTEwMCI+CiAgICAgICAgICAgIAogICAgICAgICAgICA8aDIgY2xhc3M9InRpdGxlIj4KICAgICAgICAgICAgICBMZW5zIENvbmZpZ3VyYXRvcgogICAgICAgICAgICA8L2gyPgogICAgICAgICAgICA8aDMgY2xhc3M9Im1haW4tcHJpY2UiPgogICAgICAgICAgICAgICQzNQogICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWQtbGF5b3V0IHBpY2stc2l6ZSI+CiAgICAgICAgICAgIAogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1kLWxheW91dC1pdGVtIG1kLXNpemUtNTAgbWQtc21hbGwtc2l6ZS0xMDAiPgogICAgICAgICAgICAgICAgPGxhYmVsPlNlbGVjdCBMZW5zIFR5cGU8L2xhYmVsPgogICAgICAgICAgICAgICAgPG1kLWZpZWxkPgogICAgICAgICAgICAgICAgICA8bWQtc2VsZWN0CiAgICAgICAgICAgICAgICAgICAgaWQ9InNlbGVjdFR5cGUiCiAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0ic2VsZWN0VHlwZSIKICAgICAgICAgICAgICAgICAgICBuYW1lPSJzZWxlY3RUeXBlIgogICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgPG1kLW9wdGlvbiB2YWx1ZT0iZGlzdGFuY2UiPgogICAgICAgICAgICAgICAgICAgICAgRGlzdGFuY2UKICAgICAgICAgICAgICAgICAgICA8L21kLW9wdGlvbj4KICAgICAgICAgICAgICAgICAgICA8bWQtb3B0aW9uIHZhbHVlPSJyZWFkaW5nIj4KICAgICAgICAgICAgICAgICAgICAgIFJlYWRpbmcKICAgICAgICAgICAgICAgICAgICA8L21kLW9wdGlvbj4KICAgICAgICAgICAgICAgICAgICA8bWQtb3B0aW9uIHZhbHVlPSJ2YXJpZm9jYWwiPgogICAgICAgICAgICAgICAgICAgICAgVmFyaWZvY2FsL1Byb2dyZXNzaXZlCiAgICAgICAgICAgICAgICAgICAgPC9tZC1vcHRpb24+CiAgICAgICAgICAgICAgICAgIDwvbWQtc2VsZWN0PgogICAgICAgICAgICAgICAgPC9tZC1maWVsZD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZC1sYXlvdXQtaXRlbSBtZC1zaXplLTUwIG1kLXNtYWxsLXNpemUtMTAwIj4KICAgICAgICAgICAgICAgIDxsYWJlbD5TZWxlY3QgTGVucyBUaGlja25lc3M8L2xhYmVsPgogICAgICAgICAgICAgICAgPG1kLWZpZWxkPgogICAgICAgICAgICAgICAgICA8bWQtc2VsZWN0CiAgICAgICAgICAgICAgICAgICAgaWQ9InNlbGVjdFRoaWNrbmVzcyIKICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJzZWxlY3RUaGlja25lc3MiCiAgICAgICAgICAgICAgICAgICAgbmFtZT0ic2VsZWN0VGhpY2tuZXNzIgogICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgPG1kLW9wdGlvbiB2YWx1ZT0ic3RhbmRhcmQiPgogICAgICAgICAgICAgICAgICAgICAgMS41IFN0YW5kYXJkCiAgICAgICAgICAgICAgICAgICAgPC9tZC1vcHRpb24+CiAgICAgICAgICAgICAgICAgICAgPG1kLW9wdGlvbiB2YWx1ZT0idGhpbiI+CiAgICAgICAgICAgICAgICAgICAgICAxLjYgVGhpbgogICAgICAgICAgICAgICAgICAgIDwvbWQtb3B0aW9uPgogICAgICAgICAgICAgICAgICAgIDxtZC1vcHRpb24gdmFsdWU9InRoaW5uZXIiPgogICAgICAgICAgICAgICAgICAgICAgMS42NyBUaGlubmVyCiAgICAgICAgICAgICAgICAgICAgPC9tZC1vcHRpb24+CiAgICAgICAgICAgICAgICAgICAgICA8bWQtb3B0aW9uIHZhbHVlPSJ0aGlubmVzdCI+CiAgICAgICAgICAgICAgICAgICAgICAxLjc0IFRoaW5uZXN0CiAgICAgICAgICAgICAgICAgICAgPC9tZC1vcHRpb24+CiAgICAgICAgICAgICAgICAgIDwvbWQtc2VsZWN0PgogICAgICAgICAgICAgICAgPC9tZC1maWVsZD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZC1sYXlvdXQtaXRlbSBtZC1zaXplLTUwIG1kLXNtYWxsLXNpemUtMTAwIj4KICAgICAgICAgICAgICAgIDxsYWJlbD5TZWxlY3QgTGVucyBDb2F0aW5nczwvbGFiZWw+CiAgICAgICAgICAgICAgICA8bWQtZmllbGQ+CiAgICAgICAgICAgICAgICAgIDxtZC1zZWxlY3QKICAgICAgICAgICAgICAgICAgICBpZD0ic2VsZWN0Q29hdGluZ3MiCiAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0ic2VsZWN0VGhpY2tuZXNzIgogICAgICAgICAgICAgICAgICAgIG5hbWU9InNlbGVjdENvYXRpbmdzIgogICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgPG1kLW9wdGlvbiB2YWx1ZT0iYXMiPgogICAgICAgICAgICAgICAgICAgICAgQW50aS1TY3JhdGNoCiAgICAgICAgICAgICAgICAgICAgPC9tZC1vcHRpb24+CiAgICAgICAgICAgICAgICAgICAgPG1kLW9wdGlvbiB2YWx1ZT0idXYiPgogICAgICAgICAgICAgICAgICAgICAgVVYgQ29hdGluZwogICAgICAgICAgICAgICAgICAgIDwvbWQtb3B0aW9uPgogICAgICAgICAgICAgICAgICAgIDxtZC1vcHRpb24gdmFsdWU9ImFyIj4KICAgICAgICAgICAgICAgICAgICAgIEFudGktUmVmbGVjdGl2ZQogICAgICAgICAgICAgICAgICAgIDwvbWQtb3B0aW9uPgogICAgICAgICAgICAgICAgICAgICAgPG1kLW9wdGlvbiB2YWx1ZT0iYmx1ZS1saWdodCI+CiAgICAgICAgICAgICAgICAgICAgICBCbHVlIExpZ2h0IEZpbHRlcgogICAgICAgICAgICAgICAgICAgIDwvbWQtb3B0aW9uPgogICAgICAgICAgICAgICAgICA8L21kLXNlbGVjdD4KICAgICAgICAgICAgICAgIDwvbWQtZmllbGQ+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgCiAgICAgICAgPGRpdiBjbGFzcz0ibWQtbGF5b3V0LWl0ZW0gbWQtc2l6ZS0xMDAiPgogICAgICAgIDxtZC1idXR0b24KICAgICAgICAgIGNsYXNzPSJtZC1zdWNjZXNzIG1kLWp1c3QtaWNvbiBtZC1yb3VuZCIKICAgICAgICA+CiAgICAgICAgICA8bWQtaWNvbj48L21kLWljb24+CiAgICAgICAgPC9tZC1idXR0b24+CiAgICAgICAgICAgICAgICAgIDxtZC1idXR0b24KICAgICAgICAgIGNsYXNzPSJtZC13YXJuaW5nIG1kLWp1c3QtaWNvbiBtZC1yb3VuZCBidXR0b24tc2VsZWN0IgogICAgICAgID4KICAgICAgICAgIDxtZC1pY29uPjwvbWQtaWNvbj4KICAgICAgICA8L21kLWJ1dHRvbj4KICAgICAgICAgICAgICAgICAgPG1kLWJ1dHRvbgogICAgICAgICAgY2xhc3M9Im1kLWRhbmdlciBtZC1qdXN0LWljb24gbWQtcm91bmQiCiAgICAgICAgPgogICAgICAgICAgPG1kLWljb24+PC9tZC1pY29uPgogICAgICAgIDwvbWQtYnV0dG9uPgogICAgICAgIDxtZC1idXR0b24KICAgICAgICAgIGNsYXNzPSJtZC1kZWZhdWx0IG1kLWp1c3QtaWNvbiBtZC1yb3VuZCIKICAgICAgICA+CiAgICAgICAgICA8bWQtaWNvbj48L21kLWljb24+CiAgICAgICAgPC9tZC1idXR0b24+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0ibWQtbGF5b3V0LWl0ZW0gbWQtc2l6ZS0xMDAiPgogICAgICAgIDxtZC1jaGVja2JveCB2LW1vZGVsPSJjaGVja2JveDEiPgogICAgICAgICAgICBQb2xhcml6ZWQKICAgICAgICAgIDwvbWQtY2hlY2tib3g+CiAgICAgICAgICA8bWQtc3dpdGNoIHYtbW9kZWw9InN3aXRjaDEiPgogICAgICAgICAgICBUb29nbGUgaXMgb24KICAgICAgICAgIDwvbWQtc3dpdGNoPgogICAgICAgICAgICAgICAgICAgICAgPG1kLXJhZGlvCiAgICAgICAgICAgIHYtbW9kZWw9InJhZGlvMSIKICAgICAgICAgICAgOnZhbHVlPSJ0cnVlIgogICAgICAgICAgPgogICAgICAgICAgICBSYWRpbyBpcyBvbgogICAgICAgICAgPC9tZC1yYWRpbz4KICAgICAgICAgIDxtZC1yYWRpbwogICAgICAgICAgICB2LW1vZGVsPSJyYWRpbzEiCiAgICAgICAgICAgIDp2YWx1ZT0iZmFsc2UiCiAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgIFJhZGlvIGlzIG9mZgogICAgICAgICAgPC9tZC1yYWRpbz4KICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InRleHQtcmlnaHQiPgogICAgICAgICAgICAgIDxtZC1idXR0b24KICAgICAgICAgICAgICAgIGNsYXNzPSJtZC1yb3NlIG1kLXJvdW5kIgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIEFkZCBUbyBDYXJ0IDxtZC1pY29uPnNob3BwaW5nX2NhcnQ8L21kLWljb24+CiAgICAgICAgICAgICAgPC9tZC1idXR0b24+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJmZWF0dXJlcyB0ZXh0LWNlbnRlciI+CiAgICAgICAgPGRpdiBjbGFzcz0ibWQtbGF5b3V0Ij4KICAgICAgICAgIDxkaXYgY2xhc3M9Im1kLWxheW91dC1pdGVtIG1kLXNpemUtMzMgbWQtc21hbGwtc2l6ZS0xMDAiPgogICAgICAgICAgICA8aW5mby1hcmVhcwogICAgICAgICAgICAgIGljb24tY29sb3I9ImluZm8iCiAgICAgICAgICAgICAgaWNvbj0ibG9jYWxfc2hpcHBpbmciCiAgICAgICAgICAgICAgdGV4dC1jZW50ZXIKICAgICAgICAgICAgPgogICAgICAgICAgICAgIDxoNAogICAgICAgICAgICAgICAgc2xvdD0idGl0bGUiCiAgICAgICAgICAgICAgICBjbGFzcz0iaW5mby10aXRsZSIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAyIERheXMgRGVsaXZlcnkKICAgICAgICAgICAgICA8L2g0PgogICAgICAgICAgICAgIDxwIHNsb3Q9ImNvbnRlbnQiPgogICAgICAgICAgICAgICAgRGl2aWRlIGRldGFpbHMgYWJvdXQgeW91ciBwcm9kdWN0IG9yIGFnZW5jeSB3b3JrIGludG8gcGFydHMuCiAgICAgICAgICAgICAgICBXcml0ZSBhIGZldyBsaW5lcyBhYm91dCBlYWNoIG9uZS4gQSBwYXJhZ3JhcGggZGVzY3JpYmluZyBhCiAgICAgICAgICAgICAgICBmZWF0dXJlIHdpbGwgYmUgZW5vdWdoLgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9pbmZvLWFyZWFzPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJtZC1sYXlvdXQtaXRlbSBtZC1zaXplLTMzIG1kLXNtYWxsLXNpemUtMTAwIj4KICAgICAgICAgICAgPGluZm8tYXJlYXMKICAgICAgICAgICAgICBpY29uLWNvbG9yPSJzdWNjZXNzIgogICAgICAgICAgICAgIGljb249InZlcmlmaWVkX3VzZXIiCiAgICAgICAgICAgICAgdGV4dC1jZW50ZXIKICAgICAgICAgICAgPgogICAgICAgICAgICAgIDxoNAogICAgICAgICAgICAgICAgc2xvdD0idGl0bGUiCiAgICAgICAgICAgICAgICBjbGFzcz0iaW5mby10aXRsZSIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICBSZWZ1bmRhYmxlIFBvbGljeQogICAgICAgICAgICAgIDwvaDQ+CiAgICAgICAgICAgICAgPHAgc2xvdD0iY29udGVudCI+CiAgICAgICAgICAgICAgICBEaXZpZGUgZGV0YWlscyBhYm91dCB5b3VyIHByb2R1Y3Qgb3IgYWdlbmN5IHdvcmsgaW50byBwYXJ0cy4KICAgICAgICAgICAgICAgIFdyaXRlIGEgZmV3IGxpbmVzIGFib3V0IGVhY2ggb25lLiBBIHBhcmFncmFwaCBkZXNjcmliaW5nIGEKICAgICAgICAgICAgICAgIGZlYXR1cmUgd2lsbCBiZSBlbm91Z2guCiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2luZm8tYXJlYXM+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9Im1kLWxheW91dC1pdGVtIG1kLXNpemUtMzMgbWQtc21hbGwtc2l6ZS0xMDAiPgogICAgICAgICAgICA8aW5mby1hcmVhcwogICAgICAgICAgICAgIGljb24tY29sb3I9InJvc2UiCiAgICAgICAgICAgICAgaWNvbj0iZmF2b3JpdGUiCiAgICAgICAgICAgICAgdGV4dC1jZW50ZXIKICAgICAgICAgICAgPgogICAgICAgICAgICAgIDxoNAogICAgICAgICAgICAgICAgc2xvdD0idGl0bGUiCiAgICAgICAgICAgICAgICBjbGFzcz0iaW5mby10aXRsZSIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICBQb3B1bGFyIEl0ZW0KICAgICAgICAgICAgICA8L2g0PgogICAgICAgICAgICAgIDxwIHNsb3Q9ImNvbnRlbnQiPgogICAgICAgICAgICAgICAgRGl2aWRlIGRldGFpbHMgYWJvdXQgeW91ciBwcm9kdWN0IG9yIGFnZW5jeSB3b3JrIGludG8gcGFydHMuCiAgICAgICAgICAgICAgICBXcml0ZSBhIGZldyBsaW5lcyBhYm91dCBlYWNoIG9uZS4gQSBwYXJhZ3JhcGggZGVzY3JpYmluZyBhCiAgICAgICAgICAgICAgICBmZWF0dXJlIHdpbGwgYmUgZW5vdWdoLgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9pbmZvLWFyZWFzPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgICAKICAgIDwvZGl2PgogIDwvZGl2Pgo8L2Rpdj4K"},null]}