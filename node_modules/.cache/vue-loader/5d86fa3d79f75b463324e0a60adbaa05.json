{"remainingRequest":"/home/envisible/Documents/code/vue-material-kit-pro-v1.2.2/vue-material-kit-v1.2.2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/envisible/Documents/code/vue-material-kit-pro-v1.2.2/vue-material-kit-v1.2.2/src/components/Tabs.vue?vue&type=style&index=0&id=28ff94c6&lang=css&scoped=true&","dependencies":[{"path":"/home/envisible/Documents/code/vue-material-kit-pro-v1.2.2/vue-material-kit-v1.2.2/src/components/Tabs.vue","mtime":1576662228000},{"path":"/home/envisible/Documents/code/vue-material-kit-pro-v1.2.2/vue-material-kit-v1.2.2/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/envisible/Documents/code/vue-material-kit-pro-v1.2.2/vue-material-kit-v1.2.2/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/envisible/Documents/code/vue-material-kit-pro-v1.2.2/vue-material-kit-v1.2.2/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/envisible/Documents/code/vue-material-kit-pro-v1.2.2/vue-material-kit-v1.2.2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/envisible/Documents/code/vue-material-kit-pro-v1.2.2/vue-material-kit-v1.2.2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmp1c3RpZnktY29udGVudC1yaWdodCB7CiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsKfQo="},{"version":3,"sources":["Tabs.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmGA;AACA;AACA","file":"Tabs.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <md-card\n    class=\"md-card-tabs\"\n    :class=\"[\n      { 'flex-column': flexColumn },\n      { 'nav-pills-icons': navPillsIcons },\n      { 'md-card-plain': plain }\n    ]\"\n  >\n    <md-card-header slot=\"header-title\" />\n\n    <md-card-content>\n      <md-list\n        class=\"nav-tabs\"\n        :class=\"{\n          'justify-content-center': pillsAlign === 'center',\n          'justify-content-right': pillsAlign === 'right'\n        }\"\n      >\n        <md-list-item\n          v-for=\"(item, index) in tabName\"\n          :key=\"item\"\n          :class=\"[\n            { active: isActivePanel(tabName[index]) },\n            { [getColorButton(colorButton)]: isActivePanel(tabName[index]) }\n          ]\"\n          @click=\"switchPanel(tabName[index])\"\n        >\n          {{ tabName[index] }}\n          <md-icon v-if=\"navPillsIcons\">\n            {{ tabIcon[index] }}\n          </md-icon>\n        </md-list-item>\n      </md-list>\n\n      <transition\n        name=\"fade\"\n        mode=\"out-in\"\n      >\n        <div class=\"tab-content\">\n          <template v-for=\"(item, index) in tabName\">\n            <template v-if=\"isActivePanel(tabName[index])\">\n              <div\n                :key=\"item\"\n                :class=\"getTabContent(index + 1)\"\n              >\n                <slot :name=\"getTabContent(index + 1)\" />\n              </div>\n            </template>\n          </template>\n        </div>\n      </transition>\n    </md-card-content>\n  </md-card>\n</template>\n\n<script>\nexport default {\n  name: \"Tabs\",\n  props: {\n    pillsAlign: String,\n    flexColumn: Boolean,\n    navPillsIcons: Boolean,\n    plain: Boolean,\n    tabName: Array,\n    tabIcon: Array,\n    colorButton: {\n      type: String,\n      default: \"\"\n    },\n    tabActive: Number,\n    onChange: Function\n  },\n  data() {\n    return {\n      activePanel: this.tabName[this.tabActive - 1]\n    };\n  },\n  methods: {\n    switchPanel(panel) {\n      if (this.activePanel !== panel && this.onChange !== undefined) {\n        this.onChange();\n      }\n      this.activePanel = panel;\n    },\n    isActivePanel(panel) {\n      return this.activePanel == panel;\n    },\n    getColorButton: function(colorButton) {\n      return \"md-\" + colorButton + \"\";\n    },\n    getTabContent: function(index) {\n      return \"tab-pane-\" + index + \"\";\n    }\n  }\n};\n</script>\n\n<style lang=\"css\" scoped>\n.justify-content-right {\n  justify-content: flex-end;\n}\n</style>\n"]}]}